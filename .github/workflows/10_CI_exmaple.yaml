name: 10 CI example

on:
  workflow_dispatch:
    inputs:
      image-tag:
        description: Tag for image
        default: latest
        type: string
        required: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install tox
        run: pip install tox

      - name: Run Lint
        run: |
          cd backend
          tox -e lint

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        
      - name: Install tox
        run: pip install tox

      - name: Run unit
        run: |
          cd backend
          tox -e lint

  build-image:
    runs-on: ubuntu-latest
    needs:
      - lint
      - unit-test

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: backend
          tags: ${{ vars.DOCKER_HUB_IMAGE }}:${{ inputs.image-tag }}
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: tmp/image.tar

  integration-tests:
    runs-on: ubuntu-latest
    needs:
      - build-image

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a
          docker run -p 8080:80 -d ${{ vars.DOCKER_HUB_IMAGE }}:${{ inputs.image-tag }} 
          sleep 5
          curl --fail 'http://localhost:8080/'

  vulnerability-scan:
    runs-on: ubuntu-latest
    needs:
      - build-image

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a

      - name: Run trivy vulnabirity scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ vars.DOCKER_HUB_IMAGE }}:${{ inputs.image-tag }}
          format: json
          output: trivy-results.json
          severity: CRITICAL,HIGH
          

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: ${{ github.workspace }}/trivy-results.json

  publish-image:
    runs-on: ubuntu-22.04
    needs: [integration-tests, vulnerability-scan]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_API_KEY }}
      - name: Docker push image to DockerHub
        run: |
          docker push ${{ vars.DOCKER_HUB_IMAGE }}:${{ inputs.image-tag }}

    


